(function(u,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("nanostores")):typeof define=="function"&&define.amd?define(["exports","nanostores"],o):(u=typeof globalThis<"u"?globalThis:u||self,o(u.nanofetch={},u.nanostores))})(this,function(u,o){"use strict";const D=({cache:r=new Map,fetcher:S,...i}={})=>{const p=new Set,w=new Set,n=new Map,c=new Map,_=new Set;let E={};const K=async([e,l],a,t)=>{const{dedupeTime:f=4e3,fetcher:v,refetchOnFocus:s,refetchOnReconnect:d,refetchInterval:m}={...t,...E},h=T();s&&p.add(e),d&&w.add(e),m&&!n.has(e)&&n.set(e,setInterval(()=>K([e,l],a,t),m));const O=c.get(e);if(!(O&&O+f>h)&&!_.has(e)){c.set(e,h),_.add(e);try{const g={data:await v(...l),loading:!1};r.set(e,g),a.set(g),c.set(e,T())}catch(g){a.set({error:g,loading:!1})}finally{_.delete(e)}}},F=e=>{!e||(p.delete(e),w.delete(e),clearInterval(n.get(e)))},N=([e,l],a,t)=>{if(!r.has(e)){const f={loading:!0};r.set(e,f)}b(()=>a.set(r.get(e))),K([e,l],a,t)};return[(e,{fetcher:l=S,...a}={})=>{if(process.env.NODE_ENV!=="production"&&!l)throw new Error("You need to set up either global fetcher of fetcher in createFetcherStore");const t=o.atom({loading:!0}),f={...i,...a,fetcher:l};let v,s,d,m,h;o.onStart(t,()=>{const M=!v;[h,v]=P(e),m=h.listen(R=>{if(F(s),R){const[V,j]=R;F(s),N([V,j],t,f),s=V,d=j}});const I=h.get();I?([s,d]=I,M&&O()):b(()=>t.set({loading:!0}))});const O=()=>{s&&d&&N([s,d],t,f)},g=t.listen;return t.listen=M=>(O(),g(M)),o.onStop(t,()=>{v(),m(),F(s)}),t},e=>{},e=>{process.env.NODE_ENV!=="test"&&console.warn("You should only use __unsafeOverruleSettings in test environment"),E=e}]},P=r=>{let S=o.atom(null),i=[];const p=()=>{i.some(n=>n===null)?S.set(null):S.set([i.join(""),i])},w=[];for(let n=0;n<r.length;n++){const c=r[n];if(typeof c=="string"){i.push(c);continue}i.push(c.get()),w.push(c.listen(_=>{i[n]=_,p()}))}return p(),[S,()=>w.forEach(n=>n())]},T=()=>new Date().getTime(),b=r=>setTimeout(r);u.nanofetch=D,Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
