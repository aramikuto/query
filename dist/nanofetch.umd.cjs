(function(a,s){typeof exports=="object"&&typeof module<"u"?s(exports,require("nanostores")):typeof define=="function"&&define.amd?define(["exports","nanostores"],s):(a=typeof globalThis<"u"?globalThis:a||self,s(a.nanofetch={},a.nanostores))})(this,function(a,s){"use strict";const D=({cache:o=new Map,fetcher:S,...i}={})=>{const p=new Set,w=new Set,n=new Map,c=new Map,_=new Set;let b={};const K=async([e,l],u,t)=>{const{dedupeTime:f=4e3,fetcher:v,refetchOnFocus:r,refetchOnReconnect:d,refetchInterval:m}={...t,...b},h=M();r&&p.add(e),d&&w.add(e),m&&!n.has(e)&&n.set(e,setInterval(()=>K([e,l],u,t),m));const O=c.get(e);O&&O+f>h||_.has(e)||(c.set(e,h),_.add(e),l||console.log(new Error),v(...l).then(F=>{const g={data:F,loading:!1};o.set(e,g),u.set(g),c.set(e,M())}).catch(F=>u.set({error:F,loading:!1})).finally(()=>_.delete(e)))},E=e=>{!e||(p.delete(e),w.delete(e),clearInterval(n.get(e)))},N=([e,l],u,t)=>{if(!o.has(e)){const f={loading:!0};o.set(e,f)}T(()=>u.set(o.get(e))),K([e,l],u,t)};return[(e,{fetcher:l=S,...u}={})=>{if(process.env.NODE_ENV!=="production"&&!l)throw new Error("You need to set up either global fetcher of fetcher in createFetcherStore");const t=s.atom({loading:!0}),f={...i,...u,fetcher:l};let v,r,d,m,h;s.onStart(t,()=>{const g=!v;[h,v]=U(e),m=h.listen(R=>{if(E(r),R){const[V,j]=R;E(r),N([V,j],t,f),r=V,d=j}});const I=h.get();I?([r,d]=I,g&&O()):T(()=>t.set({loading:!0}))});const O=()=>{r&&d&&N([r,d],t,f)},F=t.listen;return t.listen=g=>(O(),F(g)),s.onStop(t,()=>{v(),m(),E(r)}),t},e=>{},e=>{process.env.NODE_ENV!=="test"&&console.warn("You should only use __unsafeOverruleSettings in test environment"),b=e}]},U=o=>{let S=s.atom(null),i=[];const p=()=>{i.some(n=>n===null)?S.set(null):S.set([i.join(""),i])},w=[];for(let n=0;n<o.length;n++){const c=o[n];if(typeof c=="string"){i.push(c);continue}i.push(c.get()),w.push(c.listen(_=>{i[n]=_,p()}))}return p(),[S,()=>w.forEach(n=>n())]},M=()=>new Date().getTime(),T=o=>setTimeout(o);a.nanofetch=D,Object.defineProperties(a,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
